import { EntityCacheMemory } from '#src/entity-cache/memory';
export class EntityCachePromiseService {
    _dao;
    constructor(dao) {
        this._dao = dao ?? new EntityCacheMemory();
    }
    /**
     * Subscribe to entity cache change and retrieve cached value if not undefined
     * @param {ID} id - entity unique identifier
     * @param {EntityCacheCallBack<ENTITY>} callback -
     * @returns {EntityCacheSubscription}
     */
    async subscribeToEntityChangeById(id, callback) {
        const idString = id.toString();
        const subscription = this._dao.subscribeById(idString, callback);
        const { entity, needToFetch = false } = this._dao.getById(idString);
        if (entity !== undefined) {
            callback({ entity, id: idString });
        }
        if (needToFetch) {
            await this.forceRefresh(id);
        }
        return subscription;
    }
    async forceRefresh(id) {
        await this._entityAsync(id).then((entity) => {
            this._dao.set({ entity, id: id.toString() }, this._timeoutOffsetMs);
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvbWlzZS1zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2VudGl0eS1jYWNoZS9wcm9taXNlLXNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUE0QixpQkFBaUIsRUFBZ0MsTUFBTSwwQkFBMEIsQ0FBQTtBQUVwSCxNQUFNLE9BQWdCLHlCQUF5QjtJQUMzQixJQUFJLENBQTJCO0lBS2xELFlBQXNCLEdBQStCO1FBQ3BELElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxJQUFJLElBQUksaUJBQWlCLEVBQVUsQ0FBQTtJQUNuRCxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSCxLQUFLLENBQUMsMkJBQTJCLENBQUMsRUFBTSxFQUFFLFFBQXFDO1FBQzlFLE1BQU0sUUFBUSxHQUFHLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQTtRQUM5QixNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUE7UUFDaEUsTUFBTSxFQUFFLE1BQU0sRUFBRSxXQUFXLEdBQUcsS0FBSyxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDbkUsSUFBSSxNQUFNLEtBQUssU0FBUyxFQUFFLENBQUM7WUFDMUIsUUFBUSxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFBO1FBQ25DLENBQUM7UUFDRCxJQUFJLFdBQVcsRUFBRSxDQUFDO1lBQ2pCLE1BQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUM1QixDQUFDO1FBRUQsT0FBTyxZQUFZLENBQUE7SUFDcEIsQ0FBQztJQUVELEtBQUssQ0FBQyxZQUFZLENBQUMsRUFBTTtRQUN4QixNQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDM0MsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxRQUFRLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFBO1FBQ3BFLENBQUMsQ0FBQyxDQUFBO0lBQ0gsQ0FBQztDQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHlwZSBFbnRpdHlDYWNoZUNhbGxCYWNrLCBFbnRpdHlDYWNoZU1lbW9yeSwgdHlwZSBFbnRpdHlDYWNoZVN1YnNjcmlwdGlvbiB9IGZyb20gJyNzcmMvZW50aXR5LWNhY2hlL21lbW9yeSdcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEVudGl0eUNhY2hlUHJvbWlzZVNlcnZpY2U8RU5USVRZLCBJRCBleHRlbmRzIHN0cmluZyB8IG51bWJlciA9IHN0cmluZz4ge1xuXHRwcm90ZWN0ZWQgcmVhZG9ubHkgX2RhbzogRW50aXR5Q2FjaGVNZW1vcnk8RU5USVRZPlxuXG5cdHByb3RlY3RlZCBhYnN0cmFjdCByZWFkb25seSBfdGltZW91dE9mZnNldE1zPzogbnVtYmVyXG5cdHByb3RlY3RlZCBhYnN0cmFjdCBfZW50aXR5QXN5bmMoaWQ6IElEKTogUHJvbWlzZTxFTlRJVFk+XG5cblx0cHJvdGVjdGVkIGNvbnN0cnVjdG9yKGRhbz86IEVudGl0eUNhY2hlTWVtb3J5PEVOVElUWT4pIHtcblx0XHR0aGlzLl9kYW8gPSBkYW8gPz8gbmV3IEVudGl0eUNhY2hlTWVtb3J5PEVOVElUWT4oKVxuXHR9XG5cblx0LyoqXG5cdCAqIFN1YnNjcmliZSB0byBlbnRpdHkgY2FjaGUgY2hhbmdlIGFuZCByZXRyaWV2ZSBjYWNoZWQgdmFsdWUgaWYgbm90IHVuZGVmaW5lZFxuXHQgKiBAcGFyYW0ge0lEfSBpZCAtIGVudGl0eSB1bmlxdWUgaWRlbnRpZmllclxuXHQgKiBAcGFyYW0ge0VudGl0eUNhY2hlQ2FsbEJhY2s8RU5USVRZPn0gY2FsbGJhY2sgLVxuXHQgKiBAcmV0dXJucyB7RW50aXR5Q2FjaGVTdWJzY3JpcHRpb259XG5cdCAqL1xuXHRhc3luYyBzdWJzY3JpYmVUb0VudGl0eUNoYW5nZUJ5SWQoaWQ6IElELCBjYWxsYmFjazogRW50aXR5Q2FjaGVDYWxsQmFjazxFTlRJVFk+KTogUHJvbWlzZTxFbnRpdHlDYWNoZVN1YnNjcmlwdGlvbj4ge1xuXHRcdGNvbnN0IGlkU3RyaW5nID0gaWQudG9TdHJpbmcoKVxuXHRcdGNvbnN0IHN1YnNjcmlwdGlvbiA9IHRoaXMuX2Rhby5zdWJzY3JpYmVCeUlkKGlkU3RyaW5nLCBjYWxsYmFjaylcblx0XHRjb25zdCB7IGVudGl0eSwgbmVlZFRvRmV0Y2ggPSBmYWxzZSB9ID0gdGhpcy5fZGFvLmdldEJ5SWQoaWRTdHJpbmcpXG5cdFx0aWYgKGVudGl0eSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRjYWxsYmFjayh7IGVudGl0eSwgaWQ6IGlkU3RyaW5nIH0pXG5cdFx0fVxuXHRcdGlmIChuZWVkVG9GZXRjaCkge1xuXHRcdFx0YXdhaXQgdGhpcy5mb3JjZVJlZnJlc2goaWQpXG5cdFx0fVxuXG5cdFx0cmV0dXJuIHN1YnNjcmlwdGlvblxuXHR9XG5cblx0YXN5bmMgZm9yY2VSZWZyZXNoKGlkOiBJRCk6IFByb21pc2U8dm9pZD4ge1xuXHRcdGF3YWl0IHRoaXMuX2VudGl0eUFzeW5jKGlkKS50aGVuKChlbnRpdHkpID0+IHtcblx0XHRcdHRoaXMuX2Rhby5zZXQoeyBlbnRpdHksIGlkOiBpZC50b1N0cmluZygpIH0sIHRoaXMuX3RpbWVvdXRPZmZzZXRNcylcblx0XHR9KVxuXHR9XG59XG4iXX0=