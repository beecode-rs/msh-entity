import { EntityCacheMemory } from '#src/entity-cache/memory';
export class EntityCachePromiseService {
    _dao;
    constructor(dao) {
        this._dao = dao ?? new EntityCacheMemory();
    }
    /**
     * Subscribe to entity cache change and retrieve cached value if not undefined
     * @param {ID} id - entity unique identifier
     * @param {EntityCacheCallBack<ENTITY>} callback -
     * @returns {EntityCacheSubscription}
     */
    async subscribeToEntityChangeById(id, callback) {
        const idString = id.toString();
        const subscription = this._dao.subscribeById(idString, callback);
        const { entity, needToFetch = false } = this._dao.getById(idString);
        if (entity !== undefined) {
            callback({ entity, id: idString });
        }
        if (needToFetch) {
            await this.forceRefresh(id);
        }
        return subscription;
    }
    async forceRefresh(id) {
        await this._entityAsync(id).then((entity) => {
            return this._dao.set({ entity, id: id.toString() }, this._timeoutOffsetMs);
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvbWlzZS1zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2VudGl0eS1jYWNoZS9wcm9taXNlLXNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUE0QixpQkFBaUIsRUFBZ0MsTUFBTSwwQkFBMEIsQ0FBQTtBQUVwSCxNQUFNLE9BQWdCLHlCQUF5QjtJQUMzQixJQUFJLENBQTJCO0lBS2xELFlBQXNCLEdBQStCO1FBQ3BELElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxJQUFJLElBQUksaUJBQWlCLEVBQVUsQ0FBQTtJQUNuRCxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSCxLQUFLLENBQUMsMkJBQTJCLENBQUMsRUFBTSxFQUFFLFFBQXFDO1FBQzlFLE1BQU0sUUFBUSxHQUFHLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQTtRQUM5QixNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUE7UUFDaEUsTUFBTSxFQUFFLE1BQU0sRUFBRSxXQUFXLEdBQUcsS0FBSyxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDbkUsSUFBSSxNQUFNLEtBQUssU0FBUyxFQUFFLENBQUM7WUFDMUIsUUFBUSxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFBO1FBQ25DLENBQUM7UUFDRCxJQUFJLFdBQVcsRUFBRSxDQUFDO1lBQ2pCLE1BQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUM1QixDQUFDO1FBRUQsT0FBTyxZQUFZLENBQUE7SUFDcEIsQ0FBQztJQUVELEtBQUssQ0FBQyxZQUFZLENBQUMsRUFBTTtRQUN4QixNQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDM0MsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLFFBQVEsRUFBRSxFQUFFLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUE7UUFDM0UsQ0FBQyxDQUFDLENBQUE7SUFDSCxDQUFDO0NBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0eXBlIEVudGl0eUNhY2hlQ2FsbEJhY2ssIEVudGl0eUNhY2hlTWVtb3J5LCB0eXBlIEVudGl0eUNhY2hlU3Vic2NyaXB0aW9uIH0gZnJvbSAnI3NyYy9lbnRpdHktY2FjaGUvbWVtb3J5J1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgRW50aXR5Q2FjaGVQcm9taXNlU2VydmljZTxFTlRJVFksIElEIGV4dGVuZHMgc3RyaW5nIHwgbnVtYmVyID0gc3RyaW5nPiB7XG5cdHByb3RlY3RlZCByZWFkb25seSBfZGFvOiBFbnRpdHlDYWNoZU1lbW9yeTxFTlRJVFk+XG5cblx0cHJvdGVjdGVkIGFic3RyYWN0IHJlYWRvbmx5IF90aW1lb3V0T2Zmc2V0TXM/OiBudW1iZXJcblx0cHJvdGVjdGVkIGFic3RyYWN0IF9lbnRpdHlBc3luYyhpZDogSUQpOiBQcm9taXNlPEVOVElUWT5cblxuXHRwcm90ZWN0ZWQgY29uc3RydWN0b3IoZGFvPzogRW50aXR5Q2FjaGVNZW1vcnk8RU5USVRZPikge1xuXHRcdHRoaXMuX2RhbyA9IGRhbyA/PyBuZXcgRW50aXR5Q2FjaGVNZW1vcnk8RU5USVRZPigpXG5cdH1cblxuXHQvKipcblx0ICogU3Vic2NyaWJlIHRvIGVudGl0eSBjYWNoZSBjaGFuZ2UgYW5kIHJldHJpZXZlIGNhY2hlZCB2YWx1ZSBpZiBub3QgdW5kZWZpbmVkXG5cdCAqIEBwYXJhbSB7SUR9IGlkIC0gZW50aXR5IHVuaXF1ZSBpZGVudGlmaWVyXG5cdCAqIEBwYXJhbSB7RW50aXR5Q2FjaGVDYWxsQmFjazxFTlRJVFk+fSBjYWxsYmFjayAtXG5cdCAqIEByZXR1cm5zIHtFbnRpdHlDYWNoZVN1YnNjcmlwdGlvbn1cblx0ICovXG5cdGFzeW5jIHN1YnNjcmliZVRvRW50aXR5Q2hhbmdlQnlJZChpZDogSUQsIGNhbGxiYWNrOiBFbnRpdHlDYWNoZUNhbGxCYWNrPEVOVElUWT4pOiBQcm9taXNlPEVudGl0eUNhY2hlU3Vic2NyaXB0aW9uPiB7XG5cdFx0Y29uc3QgaWRTdHJpbmcgPSBpZC50b1N0cmluZygpXG5cdFx0Y29uc3Qgc3Vic2NyaXB0aW9uID0gdGhpcy5fZGFvLnN1YnNjcmliZUJ5SWQoaWRTdHJpbmcsIGNhbGxiYWNrKVxuXHRcdGNvbnN0IHsgZW50aXR5LCBuZWVkVG9GZXRjaCA9IGZhbHNlIH0gPSB0aGlzLl9kYW8uZ2V0QnlJZChpZFN0cmluZylcblx0XHRpZiAoZW50aXR5ICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdGNhbGxiYWNrKHsgZW50aXR5LCBpZDogaWRTdHJpbmcgfSlcblx0XHR9XG5cdFx0aWYgKG5lZWRUb0ZldGNoKSB7XG5cdFx0XHRhd2FpdCB0aGlzLmZvcmNlUmVmcmVzaChpZClcblx0XHR9XG5cblx0XHRyZXR1cm4gc3Vic2NyaXB0aW9uXG5cdH1cblxuXHRhc3luYyBmb3JjZVJlZnJlc2goaWQ6IElEKTogUHJvbWlzZTx2b2lkPiB7XG5cdFx0YXdhaXQgdGhpcy5fZW50aXR5QXN5bmMoaWQpLnRoZW4oKGVudGl0eSkgPT4ge1xuXHRcdFx0cmV0dXJuIHRoaXMuX2Rhby5zZXQoeyBlbnRpdHksIGlkOiBpZC50b1N0cmluZygpIH0sIHRoaXMuX3RpbWVvdXRPZmZzZXRNcylcblx0XHR9KVxuXHR9XG59XG4iXX0=